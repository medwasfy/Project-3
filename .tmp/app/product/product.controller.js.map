{"version":3,"sources":["../../../client/app/product/product.controller.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAC7B,UAAU,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,EACvE,UAAS,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE;;AAE9C,SAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,iBAAiB,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,UAAS,cAAc,EAAE;AAC5E,UAAM,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,UAAA,aAAa;aAAI,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,aAAa,EAAE,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC;KAAA,CAAC,CAAC;GAC7I,CAAC,CAAC;;;AAGH,QAAM,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,EAAE,UAAS,CAAC,EAAE;AAChE,UAAM,CAAC,OAAO,CAAC,aAAa,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACnD,WAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,UAAS,eAAe,EAAE;AAChF,YAAM,CAAC,eAAe,GAAG,CAAC,CAAC,MAAM,CAC/B,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,UAAA,cAAc;eACnC,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,aAAa,EAAE,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC;OAAA,CAAC,EAAE,UAAA,EAAE;eAAI,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG;OAAA,CAAC,CAAC;KAC5G,CAAC,CAAC;GACJ,CAAC,CAAC;;AAGH,QAAM,CAAC,SAAS,GAAG,UAAS,MAAM,EAAE,SAAS,EAAE;AAC7C,WAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,UAAS,IAAI,EAAE;AACvD,YAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,YAAM,CAAC,MAAM,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAC9B,YAAM,CAAC,OAAO,GAAG,2BAA2B,CAAA;KAC7C,EAAE,UAAS,GAAG,EAAE;AACf,aAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;AAChB,YAAM,CAAC,OAAO,GAAG,mBAAmB,CAAA;KACrC,CAAC,CAAC;GACJ,CAAA;CACF,CACF,CAAC,CAAC;;AAEL,IAAI,gBAAgB,GAAG,SAAnB,gBAAgB,CAAG,CAAC;SAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,UAAC,CAAC,EAAE,CAAC;WAAK,CAAC,GAAG,CAAC,CAAC,MAAM;GAAA,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;CAAA,CAAC","file":"product.controller.js","sourcesContent":["'use strict';\n\nangular.module('buildoutletApp')\n  .controller('ProductCtrl', ['$scope', '$stateParams', '$state', 'Product',\n    function($scope, $stateParams, $state, Product) {\n      // Upsell Products\n      Product.catalog({ id: 'upsell-products', limit: 6 }, function(upsellProducts) {\n        $scope.upsellProducts = _.map(upsellProducts, upsellProduct => _.extend(upsellProduct, { averageRating: getAverageRating(upsellProduct) }));\n      });\n\n      //Get product and fetch related products based on category\n      $scope.product = Product.get({ id: $stateParams.id }, function(p) {\n        $scope.product.averageRating = getAverageRating(p);\n        Product.catalog({ id: p.categories[0].slug, limit: 6 }, function(relatedProducts) {\n          $scope.relatedProducts = _.filter(\n            _.map(relatedProducts, relatedProduct =>\n              _.extend(relatedProduct, { averageRating: getAverageRating(relatedProduct) })), rp => rp._id != p._id);\n        });\n      });\n\n\n      $scope.addReview = function(review, productId) {\n        Product.review({ id: productId }, review, function(resp) {\n          $scope.product.reviews.push(resp);\n          $scope.review = { rating: 5 };\n          $scope.message = \"Review added successfully\"\n        }, function(err) {\n          console.log(err)\n          $scope.message = \"An error occured!\"\n        });\n      }\n    }\n  ]);\n\nlet getAverageRating = p => Math.ceil(_.reduce(p.reviews, (a, b) => a + b.rating, 0) / p.reviews.length);\n"]}